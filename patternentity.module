<?php

module_load_include('inc', 'patternentity', 'theme/theme');

/**
 * Implements hook_entity_info().
 */
function patternentity_entity_info() {
  $return['patternentity'] = array(
    'label' => t('Pattern Entity'),
    'base table' => 'patternentity',
    'entity keys' => array(
      'id' => 'pid',
      'label' => 'title',
    ),
    'entity class' => 'PatternEntity',
    'uri callback' => 'entity_class_uri',
    'controller class' => 'PatternEntityController',
    'admin ui' => array(
      'path' => 'admin/structure/patternentity',
      'controller class' => 'PatternEntityUIController',
      'file' => 'includes/patternentity.admin.inc',
    ),
    'module' => 'patternentity',
    'access callback' => 'patternentity_admin_access',
    'fieldable' => TRUE,
    'bundles' => array(
      'patternentity' => array(
        'label' => t('pattern entity bundle'),
        'admin' => array(
          'path' => 'admin/structure/patternentity',
          'access arguments' => array('administer patternentity'),
        ),
      ),
    ),

    'view modes' => array(
      'full pattern' => array(
        'label' => t('full for pattern'),
        'custom settings' => FALSE,
      ),
      'teaser pattern' => array(
        'label' => t('teaser for pattern'),
        'custom settings' => FALSE,
      ),
    ),
  );

  return $return;
}

/**
 * accesss callback function for hook_entity_info().
 */
function patternentity_admin_access($op, $profile = NULL, $account = NULL) {
  return user_access('administer patternentity', $account);
}

/**
 * Implements hook_permission().
 */
function patternentity_permission() {
  return array(
    'administer patternentity' => array(
      'title' => t('Administer patternentity'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function patternentity_menu() {
  $items = array();
  $items['pattern_entity_test'] = array(
    'title' => 'pattern entity test',
    'description' => 'pattern entity test des', 
    'page callback' => '_pattern_entity_test_page',
    'access callback' => TRUE,
  );

  $items['pattern/%'] = array(
    'title' => 'pattern view',
    'description' => 'pattern view page',
    'page callback' => '_pattern_entity_view_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * callback hook_menu()
 */
function _pattern_entity_test_page() {
  //$file = files_load();
  return "hello world";
}

/**
 * callback for /pattern/pid
 */
function _pattern_entity_view_page($pid) {
  $pe = entity_load('patternentity', array($pid));
  $pee = $pe;
  dsm($pe);
  dsm($pe[$pid]);
  $pe = $pe[$pid];
  drupal_set_title($pe->title);


  $items = array(
    array( 'data' => $pe->title, 'class' => array()),
    array( 'data' => $pe->description, 'class' => array()),
    array( 'data' => $pe->category, 'class' => array()),
    array( 'data' => $pe->author, 'class' => array()),
    array( 'data' => $pe->uploader, 'class' => array()),
    array( 'data' => $pe->file_name, 'class' => array()),
    array( 'data' => $pe->file_format, 'class' => array()),
    array( 'data' => $pe->file_path, 'class' => array()),
    array( 'data' => $pe->file_downloads, 'class' => array()),
  );

  $content = theme('item_list', array(
    'items' => $items,
    'type' => 'ol',
  ));

  $content .= _pattern_entity_parser_field_pattern($pe->pattern);

  $var = entity_view('patternentity', array($pid => $pe));
  $content .= drupal_render($var);

  return $content;
}

